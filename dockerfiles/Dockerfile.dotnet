############################################################################
#Задание: создать Dockerfile для dotnet приложения соблюдая Best Practicies#
############################################################################

# Используем официальный образ .NET Core в качестве базового образа для сборки
FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build-env

# Устанавливаем переменную окружения для оптимизации производительности
ENV ASPNETCORE_ENVIRONMENT=Production

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем файлы проекта и использую кэш для ускорения операции восстановления зависимостей
COPY *.csproj ./
RUN dotnet restore

# Копируем все остальные файлы проекта и провожу сборку приложения
COPY . ./
RUN dotnet publish -c Release -o out

# Используем образ .NET Core Runtime в качестве основного образа для выпуска
FROM mcr.microsoft.com/dotnet/core/aspnet:3.1 AS runtime

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем сборку из предыдущего этапа сборки
COPY —from=build-env /app/out .

# Устанавливаем переменную окружения ASP.NET Core для оптимизации производительности
ENV ASPNETCORE_ENVIRONMENT=Production

# Определяем порт, который будет использоваться приложением
EXPOSE 80

# Запускаем приложение
ENTRYPOINT ["dotnet", "YourAppName.dll"]
